/* This chip find the sum/difference of two 8-bit unsigned integers */

CHIP SignedCLA8 {
    /* Here, cPin chooses whether to perform addition[0] or subtraction[1] */
    IN X[8], Y[8], cPin;
    OUT S[8], OF;

    PARTS:
    /* Here, we find the 1s complement of the second integer as necessary */
    Mux8Bit2To1(a=false, b=true, sel=cPin, out=T);
    Xor8Bit(a=Y, b=T, out[0..3]=Y0, out[4..7]=Y4);

    /*Here we generate the propagator and generator terms*/
    Xor8Bit(a=X, b[0..3]=Y0, b[4..7]=Y4, out[0..3]=P0, out[4..7]=P4);
    And8Bit(a=X, b[0..3]=Y0, b[4..7]=Y4, out[0..3]=G0, out[4..7]=G4);

    /*Here we use 4 sequential CLA based adders to find the sum- note that C0=cPin initially */
    CLA4(X=X[0..3],Y=Y0,C0=cPin,P=P0,G=G0,S=S[0..3],C4=C4);
    CLA4Signed(X=X[4..7],Y=Y4,C0=C4,P=P4,G=G4,S=S[4..7],OF=OF);
}