CHIP Main{
    IN opCode[3],sPin,X[8],Y[8];
    OUT OF,EQ,Z[8];

    PARTS:
        Not(in=sPin, out=notsPin);
        EQ8Bit(x=X,y=Y,EQ=EQ);
        Nop8Bit(a=X,b=Y,out=nop);
        And8Bit(a=X,b=Y,out=and);
        Or8Bit(a=X,b=Y,out=or);
        Xor8Bit(a=X,b=Y,out=xor);

        UnsignedCLA8(X=X,Y=Y,cPin=false,S=and2,OF=OF10);
        SignedCLA8(X=X,Y=Y,cPin=false,S=and1,OF=OF11);
        And(a=notsPin, b=OF10, out=w1);
        And(a=sPin, b=OF11, out=w2);
        Or(a=w1, b=w2, out=OF1);
        Mux8Bit2To1(a=and2, b=and1, sel=sPin, out=add);
        
        UnsignedBLS8(X=X,Y=Y,out=sub2,OF=OF20);
        SignedCLA8(X=X,Y=Y,cPin=true,S=sub1,OF=OF21);
        And(a=notsPin, b=OF20, out=w3);
        And(a=sPin, b=OF21, out=w4);
        Or(a=w3, b=w4, out=OF2);
        Mux8Bit2To1(a=sub2, b=sub1, sel=sPin, out=sub);

        UnsignedCSAMultiplier(x=X,y=Y,M=umul,OF=OF3);
        SignedCSAMultiplier(x=X,y=Y,M=imul,OF=OF4);
        

        Mux8Bit4To1(a=nop, b=and, c=or, d=xor, sel=opCode[0..1], out=M1);
        Mux8Bit4To1(a=add, b=sub, c=umul, d=imul, sel=opCode[0..1], out=M2);
        Mux8Bit2To1(a=M1, b=M2, sel=opCode[2], out=Z);
        Mux8Bit4To1(a=OF1, b=OF2, c=OF3, d=OF4, sel=opCode[0..1], out=OF);
        
}
