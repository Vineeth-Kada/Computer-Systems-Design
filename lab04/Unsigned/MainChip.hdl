CHIP MainChip {
    IN X[8],Y[8];
    OUT Z[8], OF;

    PARTS:
    ppGeneratorUnsigned(X=X, Y=Y, pp0=pp0, pp1=pp1, pp2=pp2, pp3=pp3, pp4=pp4, pp5=pp5, pp6=pp6, pp7=pp7);

    // Using CSA method

    // Level - 0 of Reducers
    SummandReducer3to2(S1=pp0, S2=pp1, S3=pp2, C=c00, S=s00);
    SummandReducer3to2(S1=pp3, S2=pp4, S3=pp5, C=c01, S=s01);

    // Level - 1 of Reducers
    SummandReducer3to2(S1=c00, S2=s00, S3=c01, C=c10, S=s10);
    SummandReducer3to2(S1=s01, S2=pp6, S3=pp7, C=c11, S=s11);

    // Level - 2 of Reducers
    SummandReducer3to2(S1=c10, S2=s10, S3=c11, C=c20, S=s20);

    // Level - 3 of Reducers
    SummandReducer3to2(S1=c20, S2=s20, S3=s11, C=c30, S=s30);

    // CLA with HL Terms
    Adder16Bit(X=c30,Y=s30,S=P,S[0..7]=Z); // S(16) = c30 + s30. Z is an 8bit number so consider only S[0..7]
    
    //calculating overflow
    FindOverflow(P=P, OF=OF);
}
