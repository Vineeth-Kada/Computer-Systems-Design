/* 4-Bit CLA without HLTerms */

CHIP CLA4 {
    /* We assume that the propagate and generate terms are already found */
    IN X[4], Y[4], c0, p[4], g[4]; //c0 is carry0, p[4],g[4] are propagate and generate terms
    OUT S[4], c4; //S[4] is X+Y, c4 is carry4

    PARTS:

    /*=====================================================
     * c1 = p0.c0 + g0
     *=====================================================*/
    And(a=p[0],b=c0,out=p0c0);
    Or(a=p0c0,b=g[0],out=c1);

    /*=====================================================
     * c2 = p1.p0.c0 + p1.g0 + g1
     *=====================================================*/
    And3(a=p[1],b=p[0],c=c0,out=p1p0c0);
    And(a=p[1],b=g[0],out=p1g0);
    Or3(a=p1p0c0,b=p1g0,c=g[1],out=c2);

    /*=====================================================
     * c3 = p2.p1.p0.c0 + p2.p1.g0 + p2.g1 + g2
     *=====================================================*/
    And4(a=p[2],b=p[1],c=p[0],d=c0,out=p2p1p0c0);
    And3(a=p[2],b=p[1],c=g[0],out=p2p1g0);
    And(a=p[2],b=g[1],out=p2g1);
    Or4(a=p2p1p0c0,b=p2p1g0,c=p2g1,d=g[2],out=c3);

    /*=============================================================
     * c4 = p3.p2.p1.p0.c0 + p3.p2.p1.g0 + p3.p2.g1 + p3.g2 + g3
     *=============================================================*/
    And5(a=p[3],b=p[2],c=p[1],d=p[0],e=c0,out=p3p2p1p0c0);
    And4(a=p[3],b=p[2],c=p[1],d=g[0],out=p3p2p1g0);
    And3(a=p[3],b=p[2],c=g[1],out=p3p2g1);
    And(a=p[3],b=g[2],out=p3g2);
    Or5(a=p3p2p1p0c0,b=p3p2p1g0,c=p3p2g1,d=p3g2,e=g[3],out=c4);

    /*=====================================================
     * Si=pi[XOR]ci
     *=====================================================*/
    Xor(a=p[0], b=c0, out=S[0]);
    Xor(a=p[1], b=c1, out=S[1]);
    Xor(a=p[2], b=c2, out=S[2]);
    Xor(a=p[3], b=c3, out=S[3]);
}