// This is a 16bit Adder based on 4bit CLA without HLTerms
// This works for both signed and unsigned integers
CHIP Adder16Bit {
    IN X[16], Y[16];
    OUT S[16];

    PARTS:
        /* Here we generate the propagator and generator terms */
        // Bus PBusi contains the propagator terms pi, pi+1, pi+2, pi+3
        // Bus GBusi contains the generator terms gi, gi+1, gi+2, gi+3
        Xor16Bit(a=X, b=Y, out[0..3]=PBus0, out[4..7]=PBus4, out[8..11]=PBus8, out[12..15]=PBus12);
        And16(a=X, b=Y, out[0..3]=GBus0, out[4..7]=GBus4, out[8..11]=GBus8, out[12..15]=GBus12);

        /* Here we use 4 sequential CLA based adders to find the sum- note that C0=cPin initially */
        CLA4(X=X[0..3],     Y=Y[0..3],      c0=false,   p=PBus0,    g=GBus0,    S=S[0..3],  c4=c4);
        CLA4(X=X[4..7],     Y=Y[4..7],      c0=c4,      p=PBus4,    g=GBus4,    S=S[4..7],  c4=c8);
        CLA4(X=X[8..11],    Y=Y[8..11],     c0=c8,      p=PBus8,    g=GBus8,    S=S[8..11], c4=c12);
        CLA4(X=X[12..15],   Y=Y[12..15],    c0=c12,     p=PBus12,   g=GBus12,   S=S[12..15],c4=c16);
}