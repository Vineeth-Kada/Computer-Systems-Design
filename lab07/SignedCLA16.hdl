// 16 Bit Signed CLA without HL propagate and generate terms
CHIP SignedCLA16 {
    IN X[16], Y[16];
    OUT S[16], OF;

    PARTS:
        /*Here we generate the propagator and generator terms*/
        Xor16Bit(a=X, b[0..3]=Y[0..3], b[4..7]=Y[4..7], b[8..11]=Y[8..11], b[12..15]=Y[12..15], out[0..3]=P0, out[4..7]=P4, out[8..11]=P8, out[12..15]=P12);
        And16(a=X, b[0..3]=Y[0..3], b[4..7]=Y[4..7], b[8..11]=Y[8..11], b[12..15]=Y[12..15], out[0..3]=G0, out[4..7]=G4, out[8..11]=G8, out[12..15]=G12);

        /*Here we use 4 sequential CLA based adders to find the sum- note that C0=cPin initially */
        CLA4(X=X[0..3],Y=Y[0..3],C0=false,P=P0,G=G0,S=S[0..3],C4=C4);
        CLA4(X=X[4..7],Y=Y[4..7],C0=C4,P=P4,G=G4,S=S[4..7],C4=C8);
        CLA4(X=X[8..11],Y=Y[8..11],C0=C8,P=P8,G=G8,S=S[8..11],C4=C12);
        CLA4Signed(X=X[12..15],Y=Y[12..15],C0=C12,P=P12,G=G12,S=S[12..15],OF=OF);
}